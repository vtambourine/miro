{"version":3,"sources":["../src/email-editor.ts","../src/index.ts"],"names":[],"mappings":"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","file":"src.9caef6c7.js","sourceRoot":"../examples","sourcesContent":["interface IEmailsGenericOptions {\n  prefix?: string;\n}\n\nclass EmailTag {\n  private content: HTMLSpanElement;\n  private deleteActionElement: HTMLSpanElement;\n\n  container: HTMLSpanElement;\n\n  // TODO: This is simple na√Øve email regular expression. In real application, the email validator must be more complicated.\n  private static EMAIL_REGEXP = /[a-zA-Z0-9\\+]+@[a-zA-Z0-9]{2,}\\.[a-zA-Z0-9]{2,}/;\n\n  constructor(value: string, options: IEmailsGenericOptions) {\n    // TODO: Simple escape function might ruin strings by converting any non-latin characters\n    const safeValue = escape(value);\n\n    const containerClassName = `${options.prefix}__email`;\n    const contentClassName = `${options.prefix}__email-content`;\n    const deleteActionClassName = `${options.prefix}__email-delete`;\n\n    const fragment = document.createRange().createContextualFragment(`\n      <span class=\"${containerClassName}\">\n        <span class=\"${contentClassName}\"></span>\n        <span class=\"${deleteActionClassName}\"></span>\n      </span>\n    `);\n\n    this.container = fragment.querySelector(`.${containerClassName}`);\n\n    if (!EmailTag.validate(safeValue)) {\n      this.container.classList.add(\"emails-editor__email--wrong\");\n    }\n\n    this.content = fragment.querySelector(`.${contentClassName}`);\n    this.content.innerHTML = safeValue;\n\n    this.deleteActionElement = fragment.querySelector(\n      `.${deleteActionClassName}`\n    );\n\n    this.attachEventListeners();\n  }\n\n  private attachEventListeners() {\n    if (this.deleteActionElement) {\n      this.deleteActionElement.addEventListener(\n        \"click\",\n        this.remove.bind(this)\n      );\n    }\n  }\n\n  private remove() {\n    if (this.container.parentNode) {\n      this.container.parentNode.removeChild(this.container);\n    }\n  }\n\n  private static validate(string: string): boolean {\n    return EmailTag.EMAIL_REGEXP.test(string);\n  }\n}\n\nclass EmailInput {\n  private shadowInput: HTMLDivElement;\n  private input: HTMLInputElement;\n\n  container: HTMLDivElement;\n\n  constructor(options: IEmailsGenericOptions) {\n    const containerClassName = `${options.prefix}__input-container`;\n    const shadowClassName = `${options.prefix}__input-shadow`;\n    const inputClassName = `${options.prefix}__input`;\n\n    const fragment = document.createRange().createContextualFragment(`\n      <div class=\"${containerClassName}\">\n        <div class=\"${shadowClassName}\"></div>\n        <input class=\"${inputClassName}\" />\n      </div>\n    `);\n\n    this.container = fragment.querySelector(`.${containerClassName}`);\n    this.shadowInput = fragment.querySelector(`.${shadowClassName}`);\n    this.input = fragment.querySelector(`.${inputClassName}`);\n\n    this.attachEventListeners();\n  }\n\n  private attachEventListeners() {\n    this.input.addEventListener(\"keydown\", event => {\n      this.shadowInput.innerText = (<HTMLInputElement>event.target).value;\n    });\n  }\n\n  set value(value: string) {\n    this.input.value = value;\n    this.shadowInput.innerText = value;\n  }\n\n  get value(): string {\n    return this.input.value;\n  }\n\n  addEventListener<K extends keyof HTMLElementEventMap>(\n    type: K,\n    listener: (event: HTMLElementEventMap[K]) => void\n  ): void {\n    this.input.addEventListener.apply(this.input, arguments);\n  }\n\n  focus() {\n    this.input.focus();\n  }\n}\n\nexport class EmailsEditor {\n  private container: HTMLDivElement;\n  private emailInput: EmailInput;\n  private options: IEmailsGenericOptions;\n\n  constructor(\n    private rootNode: HTMLElement,\n    private emails: string[] = [],\n    options?: IEmailsGenericOptions\n  ) {\n    this.options = Object.assign(\n      {\n        prefix: \"emails-editor\",\n      },\n      options\n    );\n    this.render();\n  }\n\n  private parseInput() {\n    this.emailInput.value\n      .trim()\n      .split(\",\")\n      .map(value => value.trim())\n      .filter(value => value.length)\n      .forEach(value => {\n        this.container.insertBefore(\n          new EmailTag(value, this.options).container,\n          this.emailInput.container\n        );\n      });\n  }\n\n  private applyChanges() {\n    this.parseInput();\n    this.emailInput.value = \"\";\n  }\n\n  render() {\n    this.container = document.createElement(\"div\");\n    this.container.classList.add(this.options.prefix);\n\n    this.container.addEventListener(\"click\", () => this.emailInput.focus());\n\n    this.emails.forEach(email => {\n      const tag = new EmailTag(email, this.options);\n      this.container.appendChild(tag.container);\n    });\n\n    this.emailInput = new EmailInput(this.options);\n\n    this.container.appendChild(this.emailInput.container);\n\n    this.emailInput.addEventListener(\"keyup\", event => {\n      switch (event.key) {\n        case \",\":\n        case \"Enter\":\n          event.preventDefault();\n          this.applyChanges();\n      }\n    });\n\n    this.emailInput.addEventListener(\"blur\", () => {\n      this.parseInput();\n      this.applyChanges();\n    });\n\n    this.rootNode.append(this.container);\n  }\n}\n","import { EmailsEditor } from \"./email-editor\";\n\nnew EmailsEditor(document.getElementById(\"email-editor-miro\"), [\n  \"alona@miro.com\",\n]);\n\nnew EmailsEditor(document.getElementById(\"email-editor-cats\"), [\n  \"rumpleteazer@jellicles.com\",\n  \"old.deuteronomy@jellicles.com\",\n  \"rum.tum.tugger@jellicles.com\",\n  \"gus@jellicles\",\n  \"alonzo\",\n]);\n"]}